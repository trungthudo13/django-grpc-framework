syntax = "proto3";

package {{model_name_in_plural_noun}};

import "google/protobuf/empty.proto";

service UserController {
    rpc List(List{{model_name}}Request) returns (List{{model_name}}Response) {
        option (google.api.http) = {
            get: "/{{model_name_in_plural_noun}}"
        };
        // option (google.api.method_signature) = "parent";
    }
    rpc Create(User) returns (User) {}
    rpc Retrieve(UserRetrieveRequest) returns (User) {}
    rpc Update(User) returns (User) {}
    rpc Destroy(User) returns (google.protobuf.Empty) {}
}

message {{model_name}} {
    {{model_fields}}
}

message List{{model_name}}Response {
    // The {{model_name_in_plural_noun}} from the specified publisher.
    repeated {{model_name}} {{model_name_in_plural_noun}} = 1;

    // A token, which can be sent as `page_token` to retrieve the next page.
    // If this field is omitted, there are no subsequent pages.
    string next_page_token = 2;
}

message List{{model_name}}Request {
    // The parent, which owns this collection of books.
    // Format: publishers/{publisher}
    // string parent = 1 [
    // (google.api.field_behavior) = REQUIRED,
    // (google.api.resource_reference) = {
    //     child_type: "{{model_name}}"
    // }];

    // The maximum number of books to return. The service may return fewer than
    // this value.
    // If unspecified, at most 50 books will be returned.
    // The maximum value is 1000; values above 1000 will be coerced to 1000.
    int32 page_size = 1;

    // A page token, received from a previous `ListBooks` call.
    // Provide this to retrieve the subsequent page.
    //
    // When paginating, all other parameters provided to `ListBooks` must match
    // the call that provided the page token.
    string page_token = 2;
}

message UserRetrieveRequest {
    int32 id = 1;
}
